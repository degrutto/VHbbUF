/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOGAUSSEXP
#define ROOGAUSSEXP

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
//#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
//#include "RooAbsCategory.h"
#include "RooMath.h"
 
class RooGaussExp : public RooAbsPdf {
public:
  enum Type { Normal, Flipped };

  RooGaussExp() {} ; 
  RooGaussExp(const char *name, const char *title,
	      RooAbsReal& _x,
	      RooAbsReal& _mean,
	      RooAbsReal& _sigma,
	      RooAbsReal& _lambda,
	      Type type=Normal);
  RooGaussExp(const RooGaussExp& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooGaussExp(*this,newname); }
  inline virtual ~RooGaussExp() { }

  //Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
  //Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  RooRealProxy x ;
  RooRealProxy mean ;
  RooRealProxy sigma ;
  RooRealProxy lambda ;
  Bool_t _flip ;

  Double_t evaluate() const ;

private:

  ClassDef(RooGaussExp,1) // Your description goes here...
};
 
#endif
